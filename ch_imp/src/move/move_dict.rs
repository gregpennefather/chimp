use crate::{shared::{board_utils::get_index_from_file_and_rank, piece_type::PieceType}, board::bitboard::Bitboard};

static ROOK_MOVEBOARDS: [u64; 64] = [72340172838076926, 144680345676153597, 289360691352306939, 578721382704613623, 1157442765409226991, 2314885530818453727, 4629771061636907199, 9259542123273814143, 72340172838141441, 144680345676217602, 289360691352369924, 578721382704674568, 1157442765409283856, 2314885530818502432, 4629771061636939584, 9259542123273813888, 72340172854657281, 144680345692602882, 289360691368494084, 578721382720276488, 1157442765423841296, 2314885530830970912, 4629771061645230144, 9259542123273748608, 72340177082712321, 144680349887234562, 289360695496279044, 578721386714368008, 1157442769150545936, 2314885534022901792, 4629771063767613504, 9259542123257036928, 72341259464802561, 144681423712944642, 289361752209228804, 578722409201797128, 1157443723186933776, 2314886351157207072, 4629771607097753664, 9259542118978846848, 72618349279904001, 144956323094725122, 289632270724367364, 578984165983651848, 1157687956502220816, 2315095537539358752, 4629910699613634624, 9259541023762186368, 143553341945872641, 215330564830528002, 358885010599838724, 645993902138460168, 1220211685215703056, 2368647251370188832, 4665518383679160384, 9259260648297103488, 18302911464433844481, 18231136449196065282, 18087586418720506884, 17800486357769390088, 17226286235867156496, 16077885992062689312, 13781085504453754944, 9187484529235886208];

fn build_rook_moveboard() -> [u64; 64] {
    let mut r = [0u64; 64];
    let rank_mask = 0b11111111u64;
    let file_mask = 0b100000001000000010000000100000001000000010000000100000001u64;
    for index in 0..64 {
        let rank = index / 8;
        let file = index % 8;
        let bitboard = ((rank_mask << rank*8) | (file_mask << file)) ^ (1u64 << index);
        println!("{file};{rank} = {index}");
        println!("{}", Bitboard::new(bitboard).to_string());
        r[index as usize] = bitboard;
    }
    r
}

pub fn get_move_bitboard(index: usize, piece_type: PieceType) -> u64 {
    match piece_type {
        PieceType::Rook => ROOK_MOVEBOARDS[index],
        _ => todo!(),
    }
}

#[cfg(test)]
mod test {
    use crate::{
        board::bitboard::Bitboard,
        r#move::move_dict::get_move_bitboard,
        shared::{board_utils::index_from_coords, piece_type::PieceType},
    };

    #[test]
    fn get_rook_moveboard_for_a1() {
        assert_eq!(
            get_move_bitboard(index_from_coords("a1") as usize, PieceType::Rook),
            0b1000000010000000100000001000000010000000100000001000000001111111
        );
    }
}
